# Generated by Django 3.2 on 2022-05-20 07:44

import apps.movie.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Anime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('poster', models.ImageField(upload_to='posters/%Y/%m/%d/', verbose_name='Poster')),
            ],
            options={
                'verbose_name': 'Anime',
                'verbose_name_plural': "Anime's",
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('number', models.PositiveSmallIntegerField()),
                ('anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='movie.anime')),
            ],
            options={
                'verbose_name': 'Season',
                'verbose_name_plural': 'Seasons',
                'ordering': ['number'],
                'unique_together': {('number', 'anime')},
            },
        ),
        migrations.CreateModel(
            name='Quality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=15, verbose_name='Name')),
                ('height', models.PositiveSmallIntegerField(verbose_name='Height')),
                ('wight', models.PositiveSmallIntegerField(verbose_name='Wight')),
            ],
            options={
                'verbose_name': 'Quality',
                'verbose_name_plural': 'Quality',
                'unique_together': {('height', 'wight')},
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('number', models.PositiveSmallIntegerField()),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='movie.season')),
            ],
            options={
                'verbose_name': 'Episode',
                'verbose_name_plural': 'Episodes',
                'ordering': ['number'],
                'unique_together': {('number', 'season')},
            },
        ),
        migrations.CreateModel(
            name='EpisodeFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=apps.movie.models.anime_path, validators=[django.core.validators.FileExtensionValidator(['webm', 'mpg', 'ogg', 'mp4', 'avi', 'mov', 'mkv', 'mod', 'mpeg'])])),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='movie.episode')),
                ('quality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movie.quality')),
            ],
            options={
                'verbose_name': 'Episode File',
                'verbose_name_plural': 'Episode Files',
                'unique_together': {('quality', 'episode')},
            },
        ),
    ]
